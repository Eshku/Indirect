/**
 * A "hot" component that manages the physics-related state of a character
 * using a bitmask. This allows for efficient state checks and modifications
 * without causing archetype changes.
 */
export class PhysicsState {
	static schema = {
		stateFlags: {
			type: 'bitmask',
			of: 'u16', // u16 to allow for more states in the future.
			values: ['GROUNDED', 'AIRBORNE', 'FLYING', 'STUNNED'],
		},
		collisionFlags: {
			type: 'bitmask',
			of: 'u8',
			values: ['COLLIDE_NONE', 'COLLIDE_TOP', 'COLLIDE_BOTTOM', 'COLLIDE_LEFT', 'COLLIDE_RIGHT'],
		},
	}

	constructor({
		stateFlags = PhysicsState.STATEFLAGS.AIRBORNE,
		collisionFlags = PhysicsState.COLLISIONFLAGS.COLLIDE_NONE,
	} = {}) {
		// The static FLAGS property is auto-generated by the SchemaParser.
		this.stateFlags = stateFlags
		this.collisionFlags = collisionFlags
	}
}